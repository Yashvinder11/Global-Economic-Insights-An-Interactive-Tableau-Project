<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0807.0327                               -->
<workbook original-version='18.1' source-build='2024.2.2 (20242.24.0807.0327)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Global Economy Indicators+' inline='true' name='federated.1ftyp2b1gzkzz812gb2730uynsve' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Global Economy Indicators' name='textscan.17kwi8l1jyj5jw17clr5h0rbfdkc'>
            <connection class='textscan' directory='C:/Users/yashu/OneDrive/Desktop' filename='Global Economy Indicators.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.17kwi8l1jyj5jw17clr5h0rbfdkc' name='Global Economy Indicators.csv' table='[Global Economy Indicators#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='CountryID ' ordinal='0' />
            <column datatype='string' name='Country ' ordinal='1' />
            <column datatype='integer' name='Year ' ordinal='2' />
            <column datatype='real' name='AMA exchange rate ' ordinal='3' />
            <column datatype='real' name='IMF based exchange rate ' ordinal='4' />
            <column datatype='integer' name='Population ' ordinal='5' />
            <column datatype='string' name='Currency ' ordinal='6' />
            <column datatype='integer' name='Per capita GNI ' ordinal='7' />
            <column datatype='integer' name=' Agriculture, hunting, forestry, fishing (ISIC A-B) ' ordinal='8' />
            <column datatype='integer' name='Changes in inventories ' ordinal='9' />
            <column datatype='real' name='Construction (ISIC F) ' ordinal='10' />
            <column datatype='real' name='Exports of goods and services ' ordinal='11' />
            <column datatype='real' name='Final consumption expenditure ' ordinal='12' />
            <column datatype='real' name='General government final consumption expenditure ' ordinal='13' />
            <column datatype='real' name='Gross capital formation ' ordinal='14' />
            <column datatype='real' name='Gross fixed capital formation (including Acquisitions less disposals of valuables) ' ordinal='15' />
            <column datatype='real' name='Household consumption expenditure (including Non-profit institutions serving households) ' ordinal='16' />
            <column datatype='real' name='Imports of goods and services ' ordinal='17' />
            <column datatype='real' name='Manufacturing (ISIC D) ' ordinal='18' />
            <column datatype='real' name=' Mining, Manufacturing, Utilities (ISIC C-E) ' ordinal='19' />
            <column datatype='real' name='Other Activities (ISIC J-P) ' ordinal='20' />
            <column datatype='real' name='Total Value Added ' ordinal='21' />
            <column datatype='real' name=' Transport, storage and communication (ISIC I) ' ordinal='22' />
            <column datatype='real' name=' Wholesale, retail trade, restaurants and hotels (ISIC G-H) ' ordinal='23' />
            <column datatype='real' name='Gross National Income(GNI) in USD ' ordinal='24' />
            <column datatype='real' name='Gross Domestic Product (GDP) ' ordinal='25' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.17kwi8l1jyj5jw17clr5h0rbfdkc' name='Global Economy Indicators.csv' table='[Global Economy Indicators#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='CountryID ' ordinal='0' />
            <column datatype='string' name='Country ' ordinal='1' />
            <column datatype='integer' name='Year ' ordinal='2' />
            <column datatype='real' name='AMA exchange rate ' ordinal='3' />
            <column datatype='real' name='IMF based exchange rate ' ordinal='4' />
            <column datatype='integer' name='Population ' ordinal='5' />
            <column datatype='string' name='Currency ' ordinal='6' />
            <column datatype='integer' name='Per capita GNI ' ordinal='7' />
            <column datatype='integer' name=' Agriculture, hunting, forestry, fishing (ISIC A-B) ' ordinal='8' />
            <column datatype='integer' name='Changes in inventories ' ordinal='9' />
            <column datatype='real' name='Construction (ISIC F) ' ordinal='10' />
            <column datatype='real' name='Exports of goods and services ' ordinal='11' />
            <column datatype='real' name='Final consumption expenditure ' ordinal='12' />
            <column datatype='real' name='General government final consumption expenditure ' ordinal='13' />
            <column datatype='real' name='Gross capital formation ' ordinal='14' />
            <column datatype='real' name='Gross fixed capital formation (including Acquisitions less disposals of valuables) ' ordinal='15' />
            <column datatype='real' name='Household consumption expenditure (including Non-profit institutions serving households) ' ordinal='16' />
            <column datatype='real' name='Imports of goods and services ' ordinal='17' />
            <column datatype='real' name='Manufacturing (ISIC D) ' ordinal='18' />
            <column datatype='real' name=' Mining, Manufacturing, Utilities (ISIC C-E) ' ordinal='19' />
            <column datatype='real' name='Other Activities (ISIC J-P) ' ordinal='20' />
            <column datatype='real' name='Total Value Added ' ordinal='21' />
            <column datatype='real' name=' Transport, storage and communication (ISIC I) ' ordinal='22' />
            <column datatype='real' name=' Wholesale, retail trade, restaurants and hotels (ISIC G-H) ' ordinal='23' />
            <column datatype='real' name='Gross National Income(GNI) in USD ' ordinal='24' />
            <column datatype='real' name='Gross Domestic Product (GDP) ' ordinal='25' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Global Economy Indicators.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CountryID </remote-name>
            <remote-type>20</remote-type>
            <local-name>[CountryID ]</local-name>
            <parent-name>[Global Economy Indicators.csv]</parent-name>
            <remote-alias>CountryID </remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country </remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country ]</local-name>
            <parent-name>[Global Economy Indicators.csv]</parent-name>
            <remote-alias>Country </remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year </remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year ]</local-name>
            <parent-name>[Global Economy Indicators.csv]</parent-name>
            <remote-alias>Year </remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>AMA exchange rate </remote-name>
            <remote-type>5</remote-type>
            <local-name>[AMA exchange rate ]</local-name>
            <parent-name>[Global Economy Indicators.csv]</parent-name>
            <remote-alias>AMA exchange rate </remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>IMF based exchange rate </remote-name>
            <remote-type>5</remote-type>
            <local-name>[IMF based exchange rate ]</local-name>
            <parent-name>[Global Economy Indicators.csv]</parent-name>
            <remote-alias>IMF based exchange rate </remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population </remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population ]</local-name>
            <parent-name>[Global Economy Indicators.csv]</parent-name>
            <remote-alias>Population </remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Currency </remote-name>
            <remote-type>129</remote-type>
            <local-name>[Currency ]</local-name>
            <parent-name>[Global Economy Indicators.csv]</parent-name>
            <remote-alias>Currency </remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Per capita GNI </remote-name>
            <remote-type>20</remote-type>
            <local-name>[Per capita GNI ]</local-name>
            <parent-name>[Global Economy Indicators.csv]</parent-name>
            <remote-alias>Per capita GNI </remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name> Agriculture, hunting, forestry, fishing (ISIC A-B) </remote-name>
            <remote-type>20</remote-type>
            <local-name>[ Agriculture, hunting, forestry, fishing (ISIC A-B) ]</local-name>
            <parent-name>[Global Economy Indicators.csv]</parent-name>
            <remote-alias> Agriculture, hunting, forestry, fishing (ISIC A-B) </remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Changes in inventories </remote-name>
            <remote-type>20</remote-type>
            <local-name>[Changes in inventories ]</local-name>
            <parent-name>[Global Economy Indicators.csv]</parent-name>
            <remote-alias>Changes in inventories </remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Construction (ISIC F) </remote-name>
            <remote-type>5</remote-type>
            <local-name>[Construction (ISIC F) ]</local-name>
            <parent-name>[Global Economy Indicators.csv]</parent-name>
            <remote-alias>Construction (ISIC F) </remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Exports of goods and services </remote-name>
            <remote-type>5</remote-type>
            <local-name>[Exports of goods and services ]</local-name>
            <parent-name>[Global Economy Indicators.csv]</parent-name>
            <remote-alias>Exports of goods and services </remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Final consumption expenditure </remote-name>
            <remote-type>5</remote-type>
            <local-name>[Final consumption expenditure ]</local-name>
            <parent-name>[Global Economy Indicators.csv]</parent-name>
            <remote-alias>Final consumption expenditure </remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>General government final consumption expenditure </remote-name>
            <remote-type>5</remote-type>
            <local-name>[General government final consumption expenditure ]</local-name>
            <parent-name>[Global Economy Indicators.csv]</parent-name>
            <remote-alias>General government final consumption expenditure </remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gross capital formation </remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gross capital formation ]</local-name>
            <parent-name>[Global Economy Indicators.csv]</parent-name>
            <remote-alias>Gross capital formation </remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gross fixed capital formation (including Acquisitions less disposals of valuables) </remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gross fixed capital formation (including Acquisitions less disposals of valuables) ]</local-name>
            <parent-name>[Global Economy Indicators.csv]</parent-name>
            <remote-alias>Gross fixed capital formation (including Acquisitions less disposals of valuables) </remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Household consumption expenditure (including Non-profit institutions serving households) </remote-name>
            <remote-type>5</remote-type>
            <local-name>[Household consumption expenditure (including Non-profit institutions serving households) ]</local-name>
            <parent-name>[Global Economy Indicators.csv]</parent-name>
            <remote-alias>Household consumption expenditure (including Non-profit institutions serving households) </remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Imports of goods and services </remote-name>
            <remote-type>5</remote-type>
            <local-name>[Imports of goods and services ]</local-name>
            <parent-name>[Global Economy Indicators.csv]</parent-name>
            <remote-alias>Imports of goods and services </remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Manufacturing (ISIC D) </remote-name>
            <remote-type>5</remote-type>
            <local-name>[Manufacturing (ISIC D) ]</local-name>
            <parent-name>[Global Economy Indicators.csv]</parent-name>
            <remote-alias>Manufacturing (ISIC D) </remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name> Mining, Manufacturing, Utilities (ISIC C-E) </remote-name>
            <remote-type>5</remote-type>
            <local-name>[ Mining, Manufacturing, Utilities (ISIC C-E) ]</local-name>
            <parent-name>[Global Economy Indicators.csv]</parent-name>
            <remote-alias> Mining, Manufacturing, Utilities (ISIC C-E) </remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Other Activities (ISIC J-P) </remote-name>
            <remote-type>5</remote-type>
            <local-name>[Other Activities (ISIC J-P) ]</local-name>
            <parent-name>[Global Economy Indicators.csv]</parent-name>
            <remote-alias>Other Activities (ISIC J-P) </remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Value Added </remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total Value Added ]</local-name>
            <parent-name>[Global Economy Indicators.csv]</parent-name>
            <remote-alias>Total Value Added </remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name> Transport, storage and communication (ISIC I) </remote-name>
            <remote-type>5</remote-type>
            <local-name>[ Transport, storage and communication (ISIC I) ]</local-name>
            <parent-name>[Global Economy Indicators.csv]</parent-name>
            <remote-alias> Transport, storage and communication (ISIC I) </remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name> Wholesale, retail trade, restaurants and hotels (ISIC G-H) </remote-name>
            <remote-type>5</remote-type>
            <local-name>[ Wholesale, retail trade, restaurants and hotels (ISIC G-H) ]</local-name>
            <parent-name>[Global Economy Indicators.csv]</parent-name>
            <remote-alias> Wholesale, retail trade, restaurants and hotels (ISIC G-H) </remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gross National Income(GNI) in USD </remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gross National Income(GNI) in USD ]</local-name>
            <parent-name>[Global Economy Indicators.csv]</parent-name>
            <remote-alias>Gross National Income(GNI) in USD </remote-alias>
            <ordinal>24</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gross Domestic Product (GDP) </remote-name>
            <remote-type>5</remote-type>
            <local-name>[Gross Domestic Product (GDP) ]</local-name>
            <parent-name>[Global Economy Indicators.csv]</parent-name>
            <remote-alias>Gross Domestic Product (GDP) </remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Agriculture, hunting, forestry, fishing (ISIC A-B)' datatype='integer' name='[ Agriculture, hunting, forestry, fishing (ISIC A-B) ]' role='measure' type='quantitative' />
      <column caption='Mining, Manufacturing, Utilities (ISIC C-E)' datatype='real' name='[ Mining, Manufacturing, Utilities (ISIC C-E) ]' role='measure' type='quantitative' />
      <column caption='Transport, storage and communication (ISIC I)' datatype='real' name='[ Transport, storage and communication (ISIC I) ]' role='measure' type='quantitative' />
      <column caption='Wholesale, retail trade, restaurants and hotels (ISIC G-H)' datatype='real' name='[ Wholesale, retail trade, restaurants and hotels (ISIC G-H) ]' role='measure' type='quantitative' />
      <column caption='AMA exchange rate' datatype='real' name='[AMA exchange rate ]' role='measure' type='quantitative' />
      <column caption='Trade Balance' datatype='real' name='[Calculation_1850135055824560129]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Exports of goods and services ]) - SUM([Imports of goods and services ])' />
      </column>
      <column caption='GDP per Capita' datatype='real' name='[Calculation_1850135055827517442]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Gross Domestic Product (GDP) ]) / SUM([Population ])' />
      </column>
      <column caption='Sectoral Contribution to GDP (%)' datatype='real' name='[Calculation_1850135055827849219]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([ Agriculture, hunting, forestry, fishing (ISIC A-B) ]) / SUM([Gross Domestic Product (GDP) ])) * 100' />
      </column>
      <column caption='Changes in inventories' datatype='integer' name='[Changes in inventories ]' role='measure' type='quantitative' />
      <column caption='Construction (ISIC F)' datatype='real' name='[Construction (ISIC F) ]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[Country ]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='CountryID' datatype='integer' name='[CountryID ]' role='dimension' type='ordinal' />
      <column caption='Currency' datatype='string' name='[Currency ]' role='dimension' type='nominal' />
      <column caption='Exports of goods and services' datatype='real' name='[Exports of goods and services ]' role='measure' type='quantitative' />
      <column caption='Final consumption expenditure' datatype='real' name='[Final consumption expenditure ]' role='measure' type='quantitative' />
      <column caption='General government final consumption expenditure' datatype='real' name='[General government final consumption expenditure ]' role='measure' type='quantitative' />
      <column caption='Gross Domestic Product (GDP)' datatype='real' name='[Gross Domestic Product (GDP) ]' role='measure' type='quantitative' />
      <column caption='Gross National Income(GNI) in USD' datatype='real' name='[Gross National Income(GNI) in USD ]' role='measure' type='quantitative' />
      <column caption='Gross capital formation' datatype='real' name='[Gross capital formation ]' role='measure' type='quantitative' />
      <column caption='Gross fixed capital formation (including Acquisitions less disposals of valuables)' datatype='real' name='[Gross fixed capital formation (including Acquisitions less disposals of valuables) ]' role='measure' type='quantitative' />
      <column caption='Household consumption expenditure (including Non-profit institutions serving households)' datatype='real' name='[Household consumption expenditure (including Non-profit institutions serving households) ]' role='measure' type='quantitative' />
      <column caption='IMF based exchange rate' datatype='real' name='[IMF based exchange rate ]' role='measure' type='quantitative' />
      <column caption='Imports of goods and services' datatype='real' name='[Imports of goods and services ]' role='measure' type='quantitative' />
      <column caption='Manufacturing (ISIC D)' datatype='real' name='[Manufacturing (ISIC D) ]' role='measure' type='quantitative' />
      <column caption='Other Activities (ISIC J-P)' datatype='real' name='[Other Activities (ISIC J-P) ]' role='measure' type='quantitative' />
      <column caption='Per capita GNI' datatype='integer' name='[Per capita GNI ]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[Population ]' role='measure' type='quantitative' />
      <column caption='Total Value Added' datatype='real' name='[Total Value Added ]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[Year ]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Global Economy Indicators.csv' datatype='table' name='[__tableau_internal_object_id__].[Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Exports of goods and services ]' derivation='Attribute' name='[attr:Exports of goods and services :qk]' pivot='key' type='quantitative' />
      <column-instance column='[Exports of goods and services ]' derivation='Count' name='[cnt:Exports of goods and services :qk]' pivot='key' type='quantitative' />
      <column-instance column='[Exports of goods and services ]' derivation='None' name='[none:Exports of goods and services :qk]' pivot='key' type='quantitative' />
      <column-instance column='[ Agriculture, hunting, forestry, fishing (ISIC A-B) ]' derivation='Sum' name='[sum: Agriculture, hunting, forestry, fishing (ISIC A-B) :qk]' pivot='key' type='quantitative' />
      <column-instance column='[ Mining, Manufacturing, Utilities (ISIC C-E) ]' derivation='Sum' name='[sum: Mining, Manufacturing, Utilities (ISIC C-E) :qk]' pivot='key' type='quantitative' />
      <column-instance column='[ Transport, storage and communication (ISIC I) ]' derivation='Sum' name='[sum: Transport, storage and communication (ISIC I) :qk]' pivot='key' type='quantitative' />
      <column-instance column='[ Wholesale, retail trade, restaurants and hotels (ISIC G-H) ]' derivation='Sum' name='[sum: Wholesale, retail trade, restaurants and hotels (ISIC G-H) :qk]' pivot='key' type='quantitative' />
      <column-instance column='[AMA exchange rate ]' derivation='Sum' name='[sum:AMA exchange rate :qk]' pivot='key' type='quantitative' />
      <column-instance column='[Changes in inventories ]' derivation='Sum' name='[sum:Changes in inventories :qk]' pivot='key' type='quantitative' />
      <column-instance column='[Construction (ISIC F) ]' derivation='Sum' name='[sum:Construction (ISIC F) :qk]' pivot='key' type='quantitative' />
      <column-instance column='[Exports of goods and services ]' derivation='Sum' name='[sum:Exports of goods and services :qk]' pivot='key' type='quantitative' />
      <column-instance column='[Final consumption expenditure ]' derivation='Sum' name='[sum:Final consumption expenditure :qk]' pivot='key' type='quantitative' />
      <column-instance column='[General government final consumption expenditure ]' derivation='Sum' name='[sum:General government final consumption expenditure :qk]' pivot='key' type='quantitative' />
      <column-instance column='[Gross Domestic Product (GDP) ]' derivation='Sum' name='[sum:Gross Domestic Product (GDP) :qk]' pivot='key' type='quantitative' />
      <column-instance column='[Gross National Income(GNI) in USD ]' derivation='Sum' name='[sum:Gross National Income(GNI) in USD :qk]' pivot='key' type='quantitative' />
      <column-instance column='[Gross capital formation ]' derivation='Sum' name='[sum:Gross capital formation :qk]' pivot='key' type='quantitative' />
      <column-instance column='[Gross fixed capital formation (including Acquisitions less disposals of valuables) ]' derivation='Sum' name='[sum:Gross fixed capital formation (including Acquisitions less disposals of valuables) :qk]' pivot='key' type='quantitative' />
      <column-instance column='[Household consumption expenditure (including Non-profit institutions serving households) ]' derivation='Sum' name='[sum:Household consumption expenditure (including Non-profit institutions serving households) :qk]' pivot='key' type='quantitative' />
      <column-instance column='[IMF based exchange rate ]' derivation='Sum' name='[sum:IMF based exchange rate :qk]' pivot='key' type='quantitative' />
      <column-instance column='[Imports of goods and services ]' derivation='Sum' name='[sum:Imports of goods and services :qk]' pivot='key' type='quantitative' />
      <column-instance column='[Manufacturing (ISIC D) ]' derivation='Sum' name='[sum:Manufacturing (ISIC D) :qk]' pivot='key' type='quantitative' />
      <column-instance column='[Other Activities (ISIC J-P) ]' derivation='Sum' name='[sum:Other Activities (ISIC J-P) :qk]' pivot='key' type='quantitative' />
      <column-instance column='[Per capita GNI ]' derivation='Sum' name='[sum:Per capita GNI :qk]' pivot='key' type='quantitative' />
      <column-instance column='[Population ]' derivation='Sum' name='[sum:Population :qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Value Added ]' derivation='Sum' name='[sum:Total Value Added :qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1850135055824560129]' derivation='User' name='[usr:Calculation_1850135055824560129:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1850135055827517442]' derivation='User' name='[usr:Calculation_1850135055827517442:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1850135055827849219]' derivation='User' name='[usr:Calculation_1850135055827849219:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[usr:Calculation_1850135055827517442:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Gross Domestic Product (GDP) :qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Population :qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum: Wholesale, retail trade, restaurants and hotels (ISIC G-H) :qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum: Mining, Manufacturing, Utilities (ISIC C-E) :qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Gross fixed capital formation (including Acquisitions less disposals of valuables) :qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:General government final consumption expenditure :qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[__tableau_internal_object_id__].[cnt:Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum: Transport, storage and communication (ISIC I) :qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Other Activities (ISIC J-P) :qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:AMA exchange rate :qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[usr:Calculation_1850135055827849219:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[attr:Exports of goods and services :qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[cnt:Exports of goods and services :qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Exports of goods and services :qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Exports of goods and services :qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Household consumption expenditure (including Non-profit institutions serving households) :qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:IMF based exchange rate :qk]&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Per capita GNI :qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum: Agriculture, hunting, forestry, fishing (ISIC A-B) :qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Construction (ISIC F) :qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Final consumption expenditure :qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Gross National Income(GNI) in USD :qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Total Value Added :qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Imports of goods and services :qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Gross capital formation :qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Manufacturing (ISIC D) :qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Changes in inventories :qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[usr:Calculation_1850135055824560129:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Global Economy Indicators.csv' id='Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D'>
            <properties context=''>
              <relation connection='textscan.17kwi8l1jyj5jw17clr5h0rbfdkc' name='Global Economy Indicators.csv' table='[Global Economy Indicators#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='CountryID ' ordinal='0' />
                  <column datatype='string' name='Country ' ordinal='1' />
                  <column datatype='integer' name='Year ' ordinal='2' />
                  <column datatype='real' name='AMA exchange rate ' ordinal='3' />
                  <column datatype='real' name='IMF based exchange rate ' ordinal='4' />
                  <column datatype='integer' name='Population ' ordinal='5' />
                  <column datatype='string' name='Currency ' ordinal='6' />
                  <column datatype='integer' name='Per capita GNI ' ordinal='7' />
                  <column datatype='integer' name=' Agriculture, hunting, forestry, fishing (ISIC A-B) ' ordinal='8' />
                  <column datatype='integer' name='Changes in inventories ' ordinal='9' />
                  <column datatype='real' name='Construction (ISIC F) ' ordinal='10' />
                  <column datatype='real' name='Exports of goods and services ' ordinal='11' />
                  <column datatype='real' name='Final consumption expenditure ' ordinal='12' />
                  <column datatype='real' name='General government final consumption expenditure ' ordinal='13' />
                  <column datatype='real' name='Gross capital formation ' ordinal='14' />
                  <column datatype='real' name='Gross fixed capital formation (including Acquisitions less disposals of valuables) ' ordinal='15' />
                  <column datatype='real' name='Household consumption expenditure (including Non-profit institutions serving households) ' ordinal='16' />
                  <column datatype='real' name='Imports of goods and services ' ordinal='17' />
                  <column datatype='real' name='Manufacturing (ISIC D) ' ordinal='18' />
                  <column datatype='real' name=' Mining, Manufacturing, Utilities (ISIC C-E) ' ordinal='19' />
                  <column datatype='real' name='Other Activities (ISIC J-P) ' ordinal='20' />
                  <column datatype='real' name='Total Value Added ' ordinal='21' />
                  <column datatype='real' name=' Transport, storage and communication (ISIC I) ' ordinal='22' />
                  <column datatype='real' name=' Wholesale, retail trade, restaurants and hotels (ISIC G-H) ' ordinal='23' />
                  <column datatype='real' name='Gross National Income(GNI) in USD ' ordinal='24' />
                  <column datatype='real' name='Gross Domestic Product (GDP) ' ordinal='25' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Comparison of AMA vs. IMF Exchange Rates Over Time'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>Comparison of AMA vs. IMF Exchange Rates Over Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global Economy Indicators+' name='federated.1ftyp2b1gzkzz812gb2730uynsve' />
          </datasources>
          <datasource-dependencies datasource='federated.1ftyp2b1gzkzz812gb2730uynsve'>
            <column caption='AMA exchange rate' datatype='real' name='[AMA exchange rate ]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[Country ]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='IMF based exchange rate' datatype='real' name='[IMF based exchange rate ]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[Year ]' role='dimension' type='quantitative' />
            <column-instance column='[Country ]' derivation='None' name='[none:Country :nk]' pivot='key' type='nominal' />
            <column-instance column='[Year ]' derivation='None' name='[none:Year :qk]' pivot='key' type='quantitative' />
            <column-instance column='[AMA exchange rate ]' derivation='Sum' name='[sum:AMA exchange rate :qk]' pivot='key' type='quantitative' />
            <column-instance column='[IMF based exchange rate ]' derivation='Sum' name='[sum:IMF based exchange rate :qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]'>
            <groupfilter function='level-members' level='[none:Country :nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:IMF based exchange rate :qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:AMA exchange rate :qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:IMF based exchange rate :qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:AMA exchange rate :qk] + [federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:IMF based exchange rate :qk])</rows>
        <cols>[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Year :qk]</cols>
      </table>
      <simple-id uuid='{45AA0247-806C-4117-8CA4-44A654E6FDD1}' />
    </worksheet>
    <worksheet name='Economic Trends Over Time: GDP vs. GNI'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>Economic Trends Over Time: GDP vs. GNI</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global Economy Indicators+' name='federated.1ftyp2b1gzkzz812gb2730uynsve' />
          </datasources>
          <datasource-dependencies datasource='federated.1ftyp2b1gzkzz812gb2730uynsve'>
            <column caption='Country' datatype='string' name='[Country ]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gross Domestic Product (GDP)' datatype='real' name='[Gross Domestic Product (GDP) ]' role='measure' type='quantitative' />
            <column caption='Gross National Income(GNI) in USD' datatype='real' name='[Gross National Income(GNI) in USD ]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[Year ]' role='dimension' type='quantitative' />
            <column-instance column='[Country ]' derivation='None' name='[none:Country :nk]' pivot='key' type='nominal' />
            <column-instance column='[Year ]' derivation='None' name='[none:Year :ok]' pivot='key' type='ordinal' />
            <column-instance column='[Year ]' derivation='None' name='[none:Year :qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Domestic Product (GDP) ]' derivation='Sum' name='[sum:Gross Domestic Product (GDP) :qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross National Income(GNI) in USD ]' derivation='Sum' name='[sum:Gross National Income(GNI) in USD :qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]'>
            <groupfilter function='level-members' level='[none:Country :nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Year :ok]'>
            <groupfilter function='level-members' level='[none:Year :ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]</column>
            <column>[federated.1ftyp2b1gzkzz812gb2730uynsve].[:Measure Names]</column>
            <column>[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Year :ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Gross National Income(GNI) in USD :qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Gross Domestic Product (GDP) :qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-markers-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Gross National Income(GNI) in USD :qk] + [federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Gross Domestic Product (GDP) :qk])</rows>
        <cols>[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Year :qk]</cols>
      </table>
      <simple-id uuid='{F3F81FF9-3EC5-4A09-B7F2-D97DC7DD9B70}' />
    </worksheet>
    <worksheet name='Exports vs. Imports Over Time'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>Exports vs. Imports Over Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global Economy Indicators+' name='federated.1ftyp2b1gzkzz812gb2730uynsve' />
          </datasources>
          <datasource-dependencies datasource='federated.1ftyp2b1gzkzz812gb2730uynsve'>
            <column caption='Country' datatype='string' name='[Country ]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Exports of goods and services' datatype='real' name='[Exports of goods and services ]' role='measure' type='quantitative' />
            <column caption='Imports of goods and services' datatype='real' name='[Imports of goods and services ]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[Year ]' role='dimension' type='quantitative' />
            <column-instance column='[Country ]' derivation='None' name='[none:Country :nk]' pivot='key' type='nominal' />
            <column-instance column='[Year ]' derivation='None' name='[none:Year :qk]' pivot='key' type='quantitative' />
            <column-instance column='[Exports of goods and services ]' derivation='Sum' name='[sum:Exports of goods and services :qk]' pivot='key' type='quantitative' />
            <column-instance column='[Imports of goods and services ]' derivation='Sum' name='[sum:Imports of goods and services :qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]'>
            <groupfilter function='level-members' level='[none:Country :nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Imports of goods and services :qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Exports of goods and services :qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Imports of goods and services :qk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Imports of goods and services :qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Exports of goods and services :qk] + [federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Imports of goods and services :qk])</rows>
        <cols>[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Year :qk]</cols>
      </table>
      <simple-id uuid='{A88A22DE-AC0D-4407-B5A6-5CF84423FD55}' />
    </worksheet>
    <worksheet name='Global Trade Balance Visualization'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>Global Trade Balance Visualization</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global Economy Indicators+' name='federated.1ftyp2b1gzkzz812gb2730uynsve' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ftyp2b1gzkzz812gb2730uynsve'>
            <column caption='Trade Balance' datatype='real' name='[Calculation_1850135055824560129]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Exports of goods and services ]) - SUM([Imports of goods and services ])' />
            </column>
            <column caption='Country' datatype='string' name='[Country ]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Exports of goods and services' datatype='real' name='[Exports of goods and services ]' role='measure' type='quantitative' />
            <column caption='Imports of goods and services' datatype='real' name='[Imports of goods and services ]' role='measure' type='quantitative' />
            <column-instance column='[Country ]' derivation='None' name='[none:Country :nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1850135055824560129]' derivation='User' name='[usr:Calculation_1850135055824560129:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.1ftyp2b1gzkzz812gb2730uynsve].[Latitude (generated)]</column>
            <column>[federated.1ftyp2b1gzkzz812gb2730uynsve].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ftyp2b1gzkzz812gb2730uynsve].[Longitude (generated)]' field-type='quantitative' max='24068492.093178235' min='-24068492.093178235' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ftyp2b1gzkzz812gb2730uynsve].[Latitude (generated)]' field-type='quantitative' max='10787314.639145162' min='-6588963.2231622534' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]' value='false' />
            <format attr='break-on-special' field='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[usr:Calculation_1850135055824560129:qk]' />
              <lod column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]' />
              <geometry column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'><![CDATA[<b>Country:</b> <[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'><![CDATA[<b>Exports:</b> <SUM(Exports of Goods and Services)>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'><![CDATA[<b>Imports:</b> <SUM(Imports of Goods and Services)>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'><![CDATA[<b>Trade Balance:</b> <SUM(Trade Balance)>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.1ftyp2b1gzkzz812gb2730uynsve].[Latitude (generated)]</rows>
        <cols>[federated.1ftyp2b1gzkzz812gb2730uynsve].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{03E1B017-4ACB-4A46-9205-208E98AB7A69}' />
    </worksheet>
    <worksheet name='Population vs. Per Capita GNI'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>Population vs. Per Capita GNI</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global Economy Indicators+' name='federated.1ftyp2b1gzkzz812gb2730uynsve' />
          </datasources>
          <datasource-dependencies datasource='federated.1ftyp2b1gzkzz812gb2730uynsve'>
            <column caption='Country' datatype='string' name='[Country ]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gross Domestic Product (GDP)' datatype='real' name='[Gross Domestic Product (GDP) ]' role='measure' type='quantitative' />
            <column caption='Per capita GNI' datatype='integer' name='[Per capita GNI ]' role='measure' type='quantitative' />
            <column caption='Population' datatype='integer' name='[Population ]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[Year ]' role='dimension' type='quantitative' />
            <column-instance column='[Country ]' derivation='None' name='[none:Country :nk]' pivot='key' type='nominal' />
            <column-instance column='[Year ]' derivation='None' name='[none:Year :qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Domestic Product (GDP) ]' derivation='Sum' name='[sum:Gross Domestic Product (GDP) :qk]' pivot='key' type='quantitative' />
            <column-instance column='[Per capita GNI ]' derivation='Sum' name='[sum:Per capita GNI :qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population ]' derivation='Sum' name='[sum:Population :qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country :nk]' member='&quot; China, Hong Kong SAR &quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot; China, Macao SAR &quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Albania&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Algeria&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Andorra&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Angola&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Anguilla&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Antigua and Barbuda&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Armenia&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Aruba&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Australia&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Austria&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Azerbaijan&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Bahamas&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Bahrain&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Barbados&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Belarus&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Belgium&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Belize&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Benin&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Bermuda&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Bhutan&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Bolivia (Plurinational State of)&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Bosnia and Herzegovina&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Botswana&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;British Virgin Islands&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Brunei Darussalam&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Burkina Faso&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Burundi&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Cabo Verde&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Cameroon&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Cayman Islands&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Central African Republic&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Chad&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Comoros&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Congo&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Cook Islands&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Côte d&apos;Ivoire&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Cuba&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Curaçao&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Cyprus&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Czechia&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Czechoslovakia (Former)&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;D.P.R. of Korea&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;D.R. of the Congo&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Denmark&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Djibouti&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Dominica&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Dominican Republic&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Ecuador&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;El Salvador&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Equatorial Guinea&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Eritrea&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Estonia&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Eswatini&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Ethiopia (Former)&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Fiji&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Finland&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Former Netherlands Antilles&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;French Polynesia&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Gabon&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Gambia&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Ghana&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Greece&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Greenland&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Grenada&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Guinea&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Guinea-Bissau&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Guyana&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Haiti&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Honduras&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Iceland&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Iran (Islamic Republic of)&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Iraq&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Ireland&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Israel&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Jamaica&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Jordan&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Kazakhstan&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Kiribati&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Kosovo&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Kuwait&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Kyrgyzstan&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Lao People&apos;s DR&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Latvia&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Lebanon&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Lesotho&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Liberia&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Libya&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Liechtenstein&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Lithuania&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Luxembourg&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Madagascar&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Malawi&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Maldives&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Mali&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Malta&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Marshall Islands&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Mauritania&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Mauritius&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Micronesia (FS of)&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Monaco&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Mongolia&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Montserrat&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Morocco&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Mozambique&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Namibia&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Nauru&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Netherlands&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;New Caledonia&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;New Zealand&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Nicaragua&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Niger&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;North Macedonia&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Norway&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Oman&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Palau&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Panama&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Papua New Guinea&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Paraguay&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Poland&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Portugal&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Puerto Rico&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Republic of Korea&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Republic of Moldova&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Romania&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Russian Federation&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Rwanda&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Saint Kitts and Nevis&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Saint Lucia&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Samoa&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;San Marino&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Sao Tome and Principe&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Senegal&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Serbia&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Seychelles&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Sierra Leone&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Singapore&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Sint Maarten (Dutch part)&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Slovakia&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Slovenia&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Solomon Islands&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Somalia&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;South Sudan&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Sri Lanka&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;St. Vincent and the Grenadines&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;State of Palestine&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Sudan&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Sudan (Former)&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Suriname&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Sweden&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Switzerland&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Syrian Arab Republic&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Tajikistan&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Timor-Leste&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Togo&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Tonga&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Trinidad and Tobago&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Türkiye&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Turkmenistan&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Turks and Caicos Islands&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Tuvalu&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;U.R. of Tanzania: Mainland&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Uganda&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Ukraine&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;United Arab Emirates&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;United States&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Uruguay&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;USSR (Former)&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Uzbekistan&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Vanuatu&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Venezuela (Bolivarian Republic of)&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Viet Nam&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Yemen&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Yemen Arab Republic (Former)&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Yemen Democratic (Former)&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Yugoslavia (Former)&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Zambia&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Zanzibar&quot;' />
              <groupfilter function='member' level='[none:Country :nk]' member='&quot;Zimbabwe&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Year :qk]' included-values='in-range'>
            <min>1970</min>
            <max>2021</max>
          </filter>
          <slices>
            <column>[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]</column>
            <column>[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Year :qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Gross Domestic Product (GDP) :qk]' />
              <lod column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Per capita GNI :qk]</rows>
        <cols>[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Population :qk]</cols>
      </table>
      <simple-id uuid='{C5F2A9F8-6227-440B-9C25-FCCDD36972EE}' />
    </worksheet>
    <worksheet name='Sectoral Contributions to GDP Over Selected Years'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book'>Sectoral Contributions to GDP Over Selected Years</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Global Economy Indicators+' name='federated.1ftyp2b1gzkzz812gb2730uynsve' />
          </datasources>
          <datasource-dependencies datasource='federated.1ftyp2b1gzkzz812gb2730uynsve'>
            <column caption='Agriculture, hunting, forestry, fishing (ISIC A-B)' datatype='integer' name='[ Agriculture, hunting, forestry, fishing (ISIC A-B) ]' role='measure' type='quantitative' />
            <column caption='Mining, Manufacturing, Utilities (ISIC C-E)' datatype='real' name='[ Mining, Manufacturing, Utilities (ISIC C-E) ]' role='measure' type='quantitative' />
            <column caption='AMA exchange rate' datatype='real' name='[AMA exchange rate ]' role='measure' type='quantitative' />
            <column caption='GDP per Capita' datatype='real' name='[Calculation_1850135055827517442]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Gross Domestic Product (GDP) ]) / SUM([Population ])' />
            </column>
            <column caption='Changes in inventories' datatype='integer' name='[Changes in inventories ]' role='measure' type='quantitative' />
            <column caption='Construction (ISIC F)' datatype='real' name='[Construction (ISIC F) ]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[Country ]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Exports of goods and services' datatype='real' name='[Exports of goods and services ]' role='measure' type='quantitative' />
            <column caption='Final consumption expenditure' datatype='real' name='[Final consumption expenditure ]' role='measure' type='quantitative' />
            <column caption='General government final consumption expenditure' datatype='real' name='[General government final consumption expenditure ]' role='measure' type='quantitative' />
            <column caption='Gross Domestic Product (GDP)' datatype='real' name='[Gross Domestic Product (GDP) ]' role='measure' type='quantitative' />
            <column caption='Gross National Income(GNI) in USD' datatype='real' name='[Gross National Income(GNI) in USD ]' role='measure' type='quantitative' />
            <column caption='Gross capital formation' datatype='real' name='[Gross capital formation ]' role='measure' type='quantitative' />
            <column caption='Gross fixed capital formation (including Acquisitions less disposals of valuables)' datatype='real' name='[Gross fixed capital formation (including Acquisitions less disposals of valuables) ]' role='measure' type='quantitative' />
            <column caption='Household consumption expenditure (including Non-profit institutions serving households)' datatype='real' name='[Household consumption expenditure (including Non-profit institutions serving households) ]' role='measure' type='quantitative' />
            <column caption='IMF based exchange rate' datatype='real' name='[IMF based exchange rate ]' role='measure' type='quantitative' />
            <column caption='Imports of goods and services' datatype='real' name='[Imports of goods and services ]' role='measure' type='quantitative' />
            <column caption='Manufacturing (ISIC D)' datatype='real' name='[Manufacturing (ISIC D) ]' role='measure' type='quantitative' />
            <column caption='Other Activities (ISIC J-P)' datatype='real' name='[Other Activities (ISIC J-P) ]' role='measure' type='quantitative' />
            <column caption='Per capita GNI' datatype='integer' name='[Per capita GNI ]' role='measure' type='quantitative' />
            <column caption='Population' datatype='integer' name='[Population ]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Global Economy Indicators.csv' datatype='integer' name='[__tableau_internal_object_id__].[Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[Year ]' role='dimension' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='Global Economy Indicators.csv' datatype='table' name='[__tableau_internal_object_id__].[Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country ]' derivation='None' name='[none:Country :nk]' pivot='key' type='nominal' />
            <column-instance column='[Year ]' derivation='None' name='[none:Year :ok]' pivot='key' type='ordinal' />
            <column-instance column='[ Agriculture, hunting, forestry, fishing (ISIC A-B) ]' derivation='Sum' name='[sum: Agriculture, hunting, forestry, fishing (ISIC A-B) :qk]' pivot='key' type='quantitative' />
            <column-instance column='[ Mining, Manufacturing, Utilities (ISIC C-E) ]' derivation='Sum' name='[sum: Mining, Manufacturing, Utilities (ISIC C-E) :qk]' pivot='key' type='quantitative' />
            <column-instance column='[AMA exchange rate ]' derivation='Sum' name='[sum:AMA exchange rate :qk]' pivot='key' type='quantitative' />
            <column-instance column='[Changes in inventories ]' derivation='Sum' name='[sum:Changes in inventories :qk]' pivot='key' type='quantitative' />
            <column-instance column='[Construction (ISIC F) ]' derivation='Sum' name='[sum:Construction (ISIC F) :qk]' pivot='key' type='quantitative' />
            <column-instance column='[Exports of goods and services ]' derivation='Sum' name='[sum:Exports of goods and services :qk]' pivot='key' type='quantitative' />
            <column-instance column='[Final consumption expenditure ]' derivation='Sum' name='[sum:Final consumption expenditure :qk]' pivot='key' type='quantitative' />
            <column-instance column='[General government final consumption expenditure ]' derivation='Sum' name='[sum:General government final consumption expenditure :qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross Domestic Product (GDP) ]' derivation='Sum' name='[sum:Gross Domestic Product (GDP) :qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross National Income(GNI) in USD ]' derivation='Sum' name='[sum:Gross National Income(GNI) in USD :qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross capital formation ]' derivation='Sum' name='[sum:Gross capital formation :qk]' pivot='key' type='quantitative' />
            <column-instance column='[Gross fixed capital formation (including Acquisitions less disposals of valuables) ]' derivation='Sum' name='[sum:Gross fixed capital formation (including Acquisitions less disposals of valuables) :qk]' pivot='key' type='quantitative' />
            <column-instance column='[Household consumption expenditure (including Non-profit institutions serving households) ]' derivation='Sum' name='[sum:Household consumption expenditure (including Non-profit institutions serving households) :qk]' pivot='key' type='quantitative' />
            <column-instance column='[IMF based exchange rate ]' derivation='Sum' name='[sum:IMF based exchange rate :qk]' pivot='key' type='quantitative' />
            <column-instance column='[Imports of goods and services ]' derivation='Sum' name='[sum:Imports of goods and services :qk]' pivot='key' type='quantitative' />
            <column-instance column='[Manufacturing (ISIC D) ]' derivation='Sum' name='[sum:Manufacturing (ISIC D) :qk]' pivot='key' type='quantitative' />
            <column-instance column='[Other Activities (ISIC J-P) ]' derivation='Sum' name='[sum:Other Activities (ISIC J-P) :qk]' pivot='key' type='quantitative' />
            <column-instance column='[Per capita GNI ]' derivation='Sum' name='[sum:Per capita GNI :qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1850135055827517442]' derivation='User' name='[usr:Calculation_1850135055827517442:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:AMA exchange rate :qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum: Agriculture, hunting, forestry, fishing (ISIC A-B) :qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Changes in inventories :qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Construction (ISIC F) :qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Exports of goods and services :qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Final consumption expenditure :qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[usr:Calculation_1850135055827517442:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:General government final consumption expenditure :qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[__tableau_internal_object_id__].[cnt:Global Economy Indicators.csv_E0206F79109E4C1FB35F900AF7C4A37D:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Gross Domestic Product (GDP) :qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Gross National Income(GNI) in USD :qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Gross capital formation :qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Gross fixed capital formation (including Acquisitions less disposals of valuables) :qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Household consumption expenditure (including Non-profit institutions serving households) :qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:IMF based exchange rate :qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Imports of goods and services :qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Manufacturing (ISIC D) :qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum: Mining, Manufacturing, Utilities (ISIC C-E) :qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Other Activities (ISIC J-P) :qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Per capita GNI :qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]'>
            <groupfilter function='level-members' level='[none:Country :nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Year :ok]'>
            <groupfilter function='level-members' level='[none:Year :ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]</column>
            <column>[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Year :ok]</column>
            <column>[federated.1ftyp2b1gzkzz812gb2730uynsve].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <tooltip column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Gross Domestic Product (GDP) :qk]' />
              <lod column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum: Agriculture, hunting, forestry, fishing (ISIC A-B) :qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <tooltip column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Gross Domestic Product (GDP) :qk]' />
              <lod column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Manufacturing (ISIC D) :qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <tooltip column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Gross Domestic Product (GDP) :qk]' />
              <lod column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum: Mining, Manufacturing, Utilities (ISIC C-E) :qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <tooltip column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Gross Domestic Product (GDP) :qk]' />
              <lod column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ftyp2b1gzkzz812gb2730uynsve].[Multiple Values]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <tooltip column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Gross Domestic Product (GDP) :qk]' />
              <lod column='[federated.1ftyp2b1gzkzz812gb2730uynsve].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1ftyp2b1gzkzz812gb2730uynsve].[sum: Agriculture, hunting, forestry, fishing (ISIC A-B) :qk] + ([federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Manufacturing (ISIC D) :qk] + ([federated.1ftyp2b1gzkzz812gb2730uynsve].[sum: Mining, Manufacturing, Utilities (ISIC C-E) :qk] + [federated.1ftyp2b1gzkzz812gb2730uynsve].[Multiple Values])))</rows>
        <cols>[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Year :ok]</cols>
      </table>
      <simple-id uuid='{FB271119-8D1E-4CC1-9D36-16307C3E7718}' />
    </worksheet>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Global Economy Indicators+' name='federated.1ftyp2b1gzkzz812gb2730uynsve' />
          </datasources>
          <datasource-dependencies datasource='federated.1ftyp2b1gzkzz812gb2730uynsve'>
            <column caption='Gross Domestic Product (GDP)' datatype='real' name='[Gross Domestic Product (GDP) ]' role='measure' type='quantitative' />
            <column-instance column='[Gross Domestic Product (GDP) ]' derivation='Sum' name='[pcdf:sum:Gross Domestic Product (GDP) :qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1ftyp2b1gzkzz812gb2730uynsve].[pcdf:sum:Gross Domestic Product (GDP) :qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{7133D571-7D71-4113-AA08-3DA3472AD0DA}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources>
            <datasource caption='Global Economy Indicators+' name='federated.1ftyp2b1gzkzz812gb2730uynsve' />
          </datasources>
          <datasource-dependencies datasource='federated.1ftyp2b1gzkzz812gb2730uynsve'>
            <column caption='Agriculture, hunting, forestry, fishing (ISIC A-B)' datatype='integer' name='[ Agriculture, hunting, forestry, fishing (ISIC A-B) ]' role='measure' type='quantitative' />
            <column caption='Mining, Manufacturing, Utilities (ISIC C-E)' datatype='real' name='[ Mining, Manufacturing, Utilities (ISIC C-E) ]' role='measure' type='quantitative' />
            <column caption='Manufacturing (ISIC D)' datatype='real' name='[Manufacturing (ISIC D) ]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[Year ]' role='dimension' type='quantitative' />
            <column-instance column='[Year ]' derivation='None' name='[none:Year :ok]' pivot='key' type='ordinal' />
            <column-instance column='[ Agriculture, hunting, forestry, fishing (ISIC A-B) ]' derivation='Sum' name='[sum: Agriculture, hunting, forestry, fishing (ISIC A-B) :qk]' pivot='key' type='quantitative' />
            <column-instance column='[ Mining, Manufacturing, Utilities (ISIC C-E) ]' derivation='Sum' name='[sum: Mining, Manufacturing, Utilities (ISIC C-E) :qk]' pivot='key' type='quantitative' />
            <column-instance column='[Manufacturing (ISIC D) ]' derivation='Sum' name='[sum:Manufacturing (ISIC D) :qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Manufacturing (ISIC D) :qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum: Agriculture, hunting, forestry, fishing (ISIC A-B) :qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum: Mining, Manufacturing, Utilities (ISIC C-E) :qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Manufacturing (ISIC D) :qk] + ([federated.1ftyp2b1gzkzz812gb2730uynsve].[sum: Agriculture, hunting, forestry, fishing (ISIC A-B) :qk] + [federated.1ftyp2b1gzkzz812gb2730uynsve].[sum: Mining, Manufacturing, Utilities (ISIC C-E) :qk]))</rows>
        <cols>[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Year :ok]</cols>
      </table>
      <simple-id uuid='{8FBC6001-D9FA-49BF-A976-BDEC855A94EE}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book' fontsize='20'>Global Economic Insights: Trends and Trade</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='600' maxwidth='800' minheight='600' minwidth='800' preset-index='3' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Global Economy Indicators+' name='federated.1ftyp2b1gzkzz812gb2730uynsve' />
      </datasources>
      <datasource-dependencies datasource='federated.1ftyp2b1gzkzz812gb2730uynsve'>
        <column caption='Country' datatype='string' name='[Country ]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column caption='Year' datatype='integer' name='[Year ]' role='dimension' type='quantitative' />
        <column-instance column='[Country ]' derivation='None' name='[none:Country :nk]' pivot='key' type='nominal' />
        <column-instance column='[Year ]' derivation='None' name='[none:Year :ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='6' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97334' id='12' param='horz' type-v2='layout-flow' w='98000' x='1000' y='1333'>
            <zone h='97334' id='7' param='vert' type-v2='layout-flow' w='78000' x='1000' y='1333'>
              <zone h='6833' id='9' type-v2='title' w='78000' x='1000' y='1333'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='90501' id='8' type-v2='layout-basic' w='78000' x='1000' y='8166'>
                <zone h='45253' id='16' name='Global Trade Balance Visualization' w='39000' x='1000' y='53414'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45248' id='17' name='Economic Trends Over Time: GDP vs. GNI' w='78000' x='1000' y='8166'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45253' id='21' name='Exports vs. Imports Over Time' w='39000' x='40000' y='53414'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='97334' id='11' is-fixed='true' param='vert' type-v2='layout-flow' w='20000' x='79000' y='1333'>
              <zone h='5333' id='14' type-v2='empty' w='20000' x='79000' y='1333'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='23389' id='18' name='Economic Trends Over Time: GDP vs. GNI' param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Year :ok]' type-v2='filter' w='20000' x='79000' y='6666'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='23389' id='19' name='Economic Trends Over Time: GDP vs. GNI' param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]' type-v2='filter' w='20000' x='79000' y='30055'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11000' id='20' name='Economic Trends Over Time: GDP vs. GNI' pane-specification-id='2' param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[:Measure Names]' type-v2='color' w='20000' x='79000' y='53444'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='23389' id='22' name='Exports vs. Imports Over Time' param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]' type-v2='filter' w='20000' x='79000' y='64444'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='10834' id='23' name='Exports vs. Imports Over Time' pane-specification-id='1' param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Imports of goods and services :qk]' type-v2='color' w='20000' x='79000' y='87833'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book' fontsize='20'>Global Economic Insights: Trends and Trade</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='27' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97334' id='26' param='vert' type-v2='layout-flow' w='98000' x='1000' y='1333'>
                <zone h='6833' id='9' type-v2='title' w='78000' x='1000' y='1333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='23389' id='18' mode='checkdropdown' name='Economic Trends Over Time: GDP vs. GNI' param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Year :ok]' type-v2='filter' w='20000' x='79000' y='6666'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='23389' id='19' mode='checkdropdown' name='Economic Trends Over Time: GDP vs. GNI' param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]' type-v2='filter' w='20000' x='79000' y='30055'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='263' h='45248' id='17' is-fixed='true' name='Economic Trends Over Time: GDP vs. GNI' w='78000' x='1000' y='8166'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11000' id='20' name='Economic Trends Over Time: GDP vs. GNI' pane-specification-id='2' param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[:Measure Names]' type-v2='color' w='20000' x='79000' y='53444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='264' h='45253' id='16' is-fixed='true' name='Global Trade Balance Visualization' w='39000' x='1000' y='53414'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='23389' id='22' mode='checkdropdown' name='Exports vs. Imports Over Time' param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]' type-v2='filter' w='20000' x='79000' y='64444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='264' h='45253' id='21' is-fixed='true' name='Exports vs. Imports Over Time' w='39000' x='40000' y='53414'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10834' id='23' name='Exports vs. Imports Over Time' pane-specification-id='1' param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Imports of goods and services :qk]' type-v2='color' w='20000' x='79000' y='87833'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{9944F7F5-C9F7-4972-9491-ACAE685540BC}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book' fontsize='20'>Economic Metrics and Sectoral Contributions</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='600' maxwidth='800' minheight='600' minwidth='800' preset-index='3' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Global Economy Indicators+' name='federated.1ftyp2b1gzkzz812gb2730uynsve' />
      </datasources>
      <datasource-dependencies datasource='federated.1ftyp2b1gzkzz812gb2730uynsve'>
        <column caption='Country' datatype='string' name='[Country ]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column caption='Year' datatype='integer' name='[Year ]' role='dimension' type='quantitative' />
        <column-instance column='[Country ]' derivation='None' name='[none:Country :nk]' pivot='key' type='nominal' />
        <column-instance column='[Year ]' derivation='None' name='[none:Year :ok]' pivot='key' type='ordinal' />
        <column-instance column='[Year ]' derivation='None' name='[none:Year :qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97334' id='10' param='horz' type-v2='layout-flow' w='98000' x='1000' y='1333'>
            <zone h='97334' id='5' param='vert' type-v2='layout-flow' w='78000' x='1000' y='1333'>
              <zone h='6833' id='7' type-v2='title' w='78000' x='1000' y='1333'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='90501' id='6' type-v2='layout-basic' w='78000' x='1000' y='8166'>
                <zone h='45250' id='8' name='Population vs. Per Capita GNI' w='78000' x='1000' y='8166'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45251' id='14' name='Comparison of AMA vs. IMF Exchange Rates Over Time' w='39000' x='1000' y='53416'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='45251' id='17' name='Sectoral Contributions to GDP Over Selected Years' w='39000' x='40000' y='53416'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='97334' id='9' is-fixed='true' param='vert' type-v2='layout-flow' w='20000' x='79000' y='1333'>
              <zone h='11500' id='11' name='Population vs. Per Capita GNI' param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Year :qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='20000' x='79000' y='1333'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='14966' id='12' name='Population vs. Per Capita GNI' param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]' type-v2='filter' w='20000' x='79000' y='12833'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='14966' id='13' name='Population vs. Per Capita GNI' pane-specification-id='0' param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Gross Domestic Product (GDP) :qk]' type-v2='size' w='20000' x='79000' y='27799'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='14966' id='15' name='Comparison of AMA vs. IMF Exchange Rates Over Time' param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]' type-v2='filter' w='20000' x='79000' y='42765'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='11000' id='16' name='Comparison of AMA vs. IMF Exchange Rates Over Time' pane-specification-id='1' param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[:Measure Names]' type-v2='color' w='20000' x='79000' y='57731'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='14966' id='18' name='Sectoral Contributions to GDP Over Selected Years' param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Year :ok]' type-v2='filter' w='20000' x='79000' y='68731'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='14970' id='19' name='Sectoral Contributions to GDP Over Selected Years' param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]' type-v2='filter' w='20000' x='79000' y='83697'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book' fontsize='20'>Economic Metrics and Sectoral Contributions</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='1350' minheight='1350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='23' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97334' id='22' param='vert' type-v2='layout-flow' w='98000' x='1000' y='1333'>
                <zone h='6833' id='7' type-v2='title' w='78000' x='1000' y='1333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11500' id='11' name='Population vs. Per Capita GNI' param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Year :qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='20000' x='79000' y='1333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14966' id='12' mode='checkdropdown' name='Population vs. Per Capita GNI' param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]' type-v2='filter' w='20000' x='79000' y='12833'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='263' h='45250' id='8' is-fixed='true' name='Population vs. Per Capita GNI' w='78000' x='1000' y='8166'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14966' id='13' name='Population vs. Per Capita GNI' pane-specification-id='0' param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Gross Domestic Product (GDP) :qk]' type-v2='size' w='20000' x='79000' y='27799'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14966' id='15' mode='checkdropdown' name='Comparison of AMA vs. IMF Exchange Rates Over Time' param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]' type-v2='filter' w='20000' x='79000' y='42765'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='264' h='45251' id='14' is-fixed='true' name='Comparison of AMA vs. IMF Exchange Rates Over Time' w='39000' x='1000' y='53416'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11000' id='16' name='Comparison of AMA vs. IMF Exchange Rates Over Time' pane-specification-id='1' param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[:Measure Names]' type-v2='color' w='20000' x='79000' y='57731'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14966' id='18' mode='checkdropdown' name='Sectoral Contributions to GDP Over Selected Years' param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Year :ok]' type-v2='filter' w='20000' x='79000' y='68731'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14970' id='19' mode='checkdropdown' name='Sectoral Contributions to GDP Over Selected Years' param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]' type-v2='filter' w='20000' x='79000' y='83697'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='264' h='45251' id='17' is-fixed='true' name='Sectoral Contributions to GDP Over Selected Years' w='39000' x='40000' y='53416'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{FDDFEA8B-8A33-4690-9307-7F562A8B2998}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Benton Sans Book' fontsize='24' underline='true'>Global Economic Insights: Trends, Trade, and Sectoral Growth</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' preset-index='1' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='1' param='vert' removable='false' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='4875' id='3' type-v2='title' w='98400' x='800' y='1000' />
            <zone h='12625' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98400' x='800' y='5875' />
            <zone h='80500' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98400' x='800' y='18500'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Focuses on GDP vs. GNI trends, global trade balance, and export-import analysis.' captured-sheet='Dashboard 1' id='1' />
                  <story-point caption='Covers population, GNI, exchange rate comparisons, and sectoral GDP contributions.' captured-sheet='Dashboard 2' id='2' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{7FD2A85E-9A4A-4DDC-831A-1B27B4ECA82F}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B85B2786-04C0-4259-A920-0504B889B3AA}' />
    </window>
    <window class='worksheet' name='Economic Trends Over Time: GDP vs. GNI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='62'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Year :ok]' type='filter' />
            <card param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ftyp2b1gzkzz812gb2730uynsve].[:Measure Names]</field>
            <field>[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]</field>
            <field>[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Year :qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A9F74536-5B8E-4092-BA9E-EF5CDC86032A}' />
    </window>
    <window class='worksheet' name='Exports vs. Imports Over Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[:Measure Names]' type='color' />
            <card pane-specification-id='1' param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Imports of goods and services :qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]</field>
            <field>[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Year :qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{26C99186-E63C-4B31-BDA1-B13C10696FAE}' />
    </window>
    <window class='worksheet' name='Global Trade Balance Visualization'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[usr:Calculation_1850135055824560129:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9EA339CD-EFB2-4FF1-B5D4-3BE2FE30E0B6}' />
    </window>
    <window class='worksheet' name='Population vs. Per Capita GNI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Year :qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[sum:Gross Domestic Product (GDP) :qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]</field>
            <field>[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Year :qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CB84025A-34E4-42DB-BCD9-6C6F28964259}' />
    </window>
    <window class='worksheet' name='Comparison of AMA vs. IMF Exchange Rates Over Time'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]</field>
            <field>[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Year :qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C3CA9E01-1C0E-4313-90B6-A00F3F4854B2}' />
    </window>
    <window class='worksheet' name='Sectoral Contributions to GDP Over Selected Years'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Year :ok]' type='filter' />
            <card param='[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Country :nk]</field>
            <field>[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Year :qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{581987BC-4AA8-4EEF-BA00-22D20C8899E3}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ftyp2b1gzkzz812gb2730uynsve].[none:Year :qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FCC46DB7-DEB0-4007-A145-04647FFDD6C5}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Economic Trends Over Time: GDP vs. GNI'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1ftyp2b1gzkzz812gb2730uynsve].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Exports vs. Imports Over Time'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Global Trade Balance Visualization'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
      </viewpoints>
      <active id='9' />
      <simple-id uuid='{3E3BAC23-4229-4571-A9F6-50E33C91D4D8}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{9A18448C-D9E2-4A0E-A747-6800D5F660E0}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Comparison of AMA vs. IMF Exchange Rates Over Time'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Population vs. Per Capita GNI'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sectoral Contributions to GDP Over Selected Years'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{B6808449-899F-4C2B-B266-722192E63242}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Comparison of AMA vs. IMF Exchange Rates Over Time' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAa9UlEQVR4nO3dWWxc2Z3f8e9daiWLxeJOihRJURRbEimJEqW22922bHd7i+1xkEEyWYwB
      skwweQyCDDBPfpkAAYIkCIKsmIfBZJlkPIg9hpeBp7vdrW53q0VtpEgtlLiK+1p73brLyQOl
      dru7LRXFKpHF+n8AASVRderU4f3de+rec/+lKaUUQlQofa87IMRekgCIimZ+9C/xeBzLsp7L
      CyulcF0X0zSf/p8/wvM8dL34uS23dpVSaJpWknaBorddynZ306a2V58B8vk86XSaWCy24+f5
      /f6S9Kec2rVtG9M0i75Bua4LgGEYRW3X8zxc18Xn8xW13d2Og0yBREWTAIiKJgEQFU0CICqa
      BEBUNAmAqGgSAFHRJACiokkAREWTAIiKJgEQFU0CICqaBEBUNAmAqGgSAFHRJACiokkAREWT
      AIiKJgEQFU0CICqaBEBUtF0HwErHmZqaIm05ZBMbPHjwgOWNJK6VZnp6lpztkslkAEUikSxC
      l4Uonp0V5fkEl+XFFdDh9r0HhLwE4WgTpqEzPnqTQHU1Y/cUIS3D4cZqprfgVE2kOD0Xogh2
      WRdI4Tk2s1OTmNEWNqausZbz03tigPjSLP39fYzevE8+s8hqxs/Fiy8TMMBxHBzHIZVKEY1G
      d/SKrusWvWaNtPsrnuehaVpJClgppYpeJGy347DLI4BibvI+VS3dNNYEiPjPcTyo+ODGNAEj
      Ry6TJK/5CNW2carZZX5li562GD6fD6UUpmnuuGhUuRWwksJY2/ZrYazdBcBziW9tMjm/TH37
      UVqCOW6OLNNz8jRRFefK9bscP30WN5OgqamemZl5FDGKX9BPiGcjpRHLtF05AmyT0ohC7IIE
      QFQ0CYCoaBIAUdEkAKKiSQBERZMAiIomARAVTQIgKpoEQFQ0CYCoaBIAUdEkAKKiSQBERZMA
      iIomARAVTQIgKpoEQFQ0CYCoaBIAUdEkAKKiSQBERZMAiIq269qgk+OjzCxv0NR5gjq1xtj0
      Ct3HzxDOLnBrapkjJ8+i5+J0tjcydn+JgeM9xem5EEWw69qgjuNiZ+M8WNjAy2Q50X+U0fFZ
      8DKcPtXHyK2HGFoW3fNoPnqS+io/Sils2yadTlNbW7ujV7Rtu+jFlcqxXcdxMAyj6IWxPM8D
      KHoNT6UUrutimrvc537Mbsdhl73RyGwuMbdp09fbxZ3RCXRDR1MKdANdN9CUh2OlSOag3dge
      VM/zUErhed6HA16ox88rtnJrt1RFbEvRV+CZf99Ps9tx2GVtUItrV67hhiK4mkmVnuT11y/R
      cqSfcHqWn//1W7T0nMFvafQPtHD99gTnz57ANE08z8MwjB3vETzPK/pepBzbfVxcuJxKIwJF
      H4vdjoPUBi3TdqU26DapDSrELkgAREWTAIiKJgEQFa2Aj+Q2P/mz/8yy3Ud91Mc3vv2l3Z47
      FWLfKOAI4OLgZ33mLls5t/Q9EuI5KmBnbtA/+EV6+220QFTmTOJAeUoAPG5feZM/+8FVTp/r
      Ie3UcbS3Q0IgDoynBECj49gpvvr1Oo70HiYSrZX5vzhQnrIz16iO1rE+80v+63/4Y/78R2/h
      PJ9+CfFcFDCbcSDcRmdbLZqVZ0/WTQhRIgXMaEx6ek9z4byJF6yXKZA4UAo4Amg8uPYGNyaX
      2dyMyxFAHCgF7NB1Bl/+MolcnlCw+KsahdhLBV0HaD9ytPQ9EWIPFBAAj2tv/5Blu4NYjZ8L
      50/JdQBxYBSwLWeZXdokMb/Cw6l5ZDGEOEgKCECY0/3HSWUXODJ4Rs4CiQOlgADY3Lp+h2DY
      5M0f/A/eGpktfa+EeE4KuhCW86p59bWLdLQ1sjwxV/peCfGcFDCjCfP5l09w6dIVjg+9TCzW
      UPpeCfGcFHAEyHHpzXfJOw6Lyylam3ZWyEqI/ayAI4CGHqji5Ml+qqMNFLcIhxB7q4AjgMHg
      2TO4jo3jfLKqVz6bYHpuEYDk2jzDw8NMLqxjZza5cfMWacshHk8AirW1tSJ3X4jdKeAIoLgz
      eolr40k6Tw/R03PoI6nxWF/fYm0jTldHKzMLK/QcPUYoHOLWjSu0dbQxfneWKtPCS/tZzVfT
      IB8hxD5S0E3xjllPR6sPLZf72GI4ndb2w2wmx7f/Zqe4fv06Hb0n8IVqaG49xMryBNmtRd5f
      8PHFL76CUgrHcXBdF8dxyOfzO+qw67o7fs5BbbcURf0e19p8XCGuWJRSH/4ppt2OQwEBCPGF
      L7/K8twkbvWhJzzBpanjOL01Jh/cnCFAhnRik5zmo6q2jaF2nemHa7zQ2YjP5/uwpuNOywaW
      WwlDKY24bb+WRnxiAJRSeK7FT//v/8StrqfhkEFvVwu/GhqXiZHrLK8nyaoQPXUa7w8vcPz0
      OWpIMHxrmoHBQexMglgshr24iAL5IC32jScGwLU3+fGf/5SVnEcs5GI7zsemQAa9p4bo/ci/
      vNLS9ehRIy99tnH7YbAOgLa2tiJ1W4jieOJZINNfx2/9/e9wpOMkf+/v/k3MdFJuiBEHSgGn
      QYNUGav8xfd/hB2NUdyZoRB7q6DFcMGadl763GeoUnlK8/0hQuyNAgLgpymS49/9+/9O5FCX
      HAHEgVLQESDnO8y/+qM/JGxtyQ0x4kApqCzK8tTbjNw7Sn3UT9/JY6XvlRDPSQEBsEjmYGth
      Bs9tkbNA4kAp6H6AVy6+yujYDEcGzsotkeJAKWh7jjV18UpjJ7btyJVccaA8dSlEcmOJ8bEx
      rl0dpaX/Jb792otyFBAHxhPPAlnpaf7NH/1HMr5G2mpbufjqBdn4xYHyxAAEq7r453/we1gr
      E9xfnOb9927JaVBxoDx5MZyT4u6dacK1jQy91IDfp8tZIHGgPPEI4DoZrr3/Pvdml/H5gzQ2
      1klZRHGgPPEI4A818/t/8C9Znb3DX/74DRa3XLq7WiUE4sB4YgDs3Ap/+l/+F16smd6BQdo7
      j8rGLw6UJ27PmhHgyLFjtDVGSSc2mZldlNWg4kB5YgAMs4Yz5/oJ6g63b44SzxX/5m4h9tJT
      rwP823/93yDaydGWLr7wpSG5DiAOlKdeB/gXf/j7GKl55jYWeO/dEbkOIMqKpxSbGZutrEPW
      /uQEXlMFFlVRSpG38viDgaKsBcrn86TTaWKx2I6fV07lS6Qsyra9KIviKcXIYpqxpQya8qhJ
      p6lLJ2nMpalpqMF37HDhMxpN0wgEA0XtvBCl4nqKa/MpJmY26b48TGRlDd3QMKuCGLUR4ndn
      sH783u6n9HYuyeJ6hsOHmrEzW9ydWqS79xh+J8XdqUWO9PbiWhkikWo21jepq68rxvsT4jfK
      ux6XZ5Msxi16Rkap1xyaf/cr+Gqr8cUiGKEAXt4hM7u82wB4rK1usLwe5/ChJsbH7tDQ0sz4
      3Ul82VWa2poZvztD2LBoiwVZyoWoqy/OmxTi0+Qdj3emE6ylbc5sLeMsLNH2e98kfLj51/6f
      7jepPvqkSocF0Wnt6GQzNQ7YmMEYre1trK9PQqiGtvbDrK9NkE0u8p7UBi16u1Ib9NfHQQFX
      HmaIZ21eqnZI/fAadZ8fwGyJ/cbfQRHPaprks3EyySSWpqFnkqSTv6oNeu6Qxsz8On2HG6Q2
      aBHIh+BtHx2H1bTNzFaeV7oiOP/vDfz1NTS+chrjCeO/ywBs1wZdWkuQVSFO9nVy9dYD+gfP
      Ecivc3V0mv7BQZxMgrq6GPl5qQ0qSsPxFFfnkrRH/YRG77E2s0z3P/sORujJJ24KPg1abHIa
      dHfkCLDt8ThMbuT4YDbJl2s8Nv70pzR86SwNnz/91OfL2jZR9nKOx62lDL31QTJvDBNsa6Du
      sycLeq4EQJS92ysZPKXo2lonM71E09cuoPsKm91LAERZy9iKuytZXoj62Pr5FWqH+gi1Nxb8
      fAmAKFuOp7ixmKE2ZFJ7bxI7nqLptSE0vfDNWgIgypJSivHlDPNxizMRjcR7ozR+aRCzOrSj
      diQAouwopbi3lmV8Oc35Q2HcX97EqApRe+H4jtuSAIiyopRiYi3L8FyKCx0RWnNp4tfu0fTa
      EGY4uOP2JACirMxtWQzPpRhoreJwAFZ/epnqvg4ixzufqT0JgCgLSimWknnenU5wsiXMUXLM
      /PFPyG+laPnW59CMZ9uU5Q5Hse8ppVhM5nlnKkFfY4juxAZzf/E2gaZaWn7ni/jrIs/ctgRA
      7HtLyTxvPYjzQlOY9qkpHv7sMtGBHlq+8zLeLucwEgCxbymlmE/keXsyzvGYj6b3r7J2/T7N
      X3+Rupf60TQNz7Z39RoSALFvLSbzvDMZpzfgEf3ZJVJrW7R/9zUifYeL9hoSALEv5R2Pd6cS
      tFspom8O42kanf/kmwSadrZ6+GkkAGLfUUpxZzWDf2ae6NUbBHtaOfTbFzHCxS/KIAEQ+04q
      7zL5MM7hK9dpGOql+RufKXh1507JdQCxryi1vbqz5uookWh4R0ubn4UEQOwr6bzH3P0l6ufm
      aXrtHEag+HfTfZQEQOwbSilGF5LU3bpLTXsDkZPdJX9NCYDYN7ZyDqv3FmhYXKTxtSF0s7j3
      JX8aCYDYF5RSjC+mabw+Ss2JTqq6W5/L60oAxJ7bPu2ZJX7jPjXJJI2vDj3z4radktOgYk/Z
      rsfIYpq7s1scHbtL3YXjBFueX/3Yogbg/ugHzK6maT1ynOrcIrdnVzl8/CymFae7o5GRiWUG
      +3uL+ZKiTCmlyNoel6bipKaX6Rm+Tixk0vClwefaj6IGIG3ZdPf00tzSwMTtJb7y6ivcHJkh
      7yW5cXODnoEzv1Yj8nGxpJ1QShW9bmU5tvt47IpdGMvzSvMtcB/9fduuYi3jMnx/neob4/Te
      n6R2oJvmb34WPRzY0XjtdhyKGoCuriOsbmwyMpYk+JEpnFIejuPieY+KmO6iSGqpCtmVW7ul
      opQqeqhgu3Bt0nJZWLOYWc3gzi3TOjJGrXJp+u0vEDl9ZEfVHIqliAFwWV2cZ241TvRQLzEv
      w89fv0RH31n0nMnAQAvXxx8QO3McwzBwXRdd13dcgs913aKX7SvHdj3PwzCMkmysULzSiJ5S
      rKVtxhdSrC5sUj2/RMv9ScJ2nujAEZq/eh4zWvXM72O34yC1Qcu03f1eG9S1HTZWk8zeXWBr
      apnQ6jrVG5sEa6uIDvZSe/YY/sborvu/23GQs0CiqJRSpCYesvKzD8isxAkpj1hbPeGBDkJd
      Q1R1tWKEAiU7cu2UBEAUjWvZrL99k5XXr+HvP8KRb71E6FADut/34YdVs8jVoXdLAiCKwk6k
      mf/fbxCfXaH2tz7PoQvHMJ/TxazdkACIZ6aUws1YJEYnWX3jGk4oRMc//TaxjoZ9M8V5GgmA
      2LGs7bKxsIkzMkH2+j1sNIKDffRcPEUwsrPanHtNAiAKZrseM3ObxF+/iv5gjupYFQ0Xz1B9
      +ij+SBhdL4+9/kdJAMRTuZ5ifTXB9Os3CYxNUNfeQNM/+hrhrlbQtbKZ7nwaCYB4okze5f47
      t3HeuU5Uh8Zvf5bawWPo/oOx6RyMdyGKTilFJptn+vtvY07M0fzKAPWfG8Cs2nkF5v1MAiA+
      VTqdZ/b7b6HPLNDxD16juq9jr7tUEhIA8QmZnMPc999Cf7hMx3e/QtWRtr3uUslIAMSHlFIk
      khZz/+cNghtxOn73qwR38IVz5UgCIADI2y4r9+ZZ/etrhNMpDv/DbzzXO7P2igSgwimlWF/Y
      YPGnH8CDh0Q7m2j7nb9BoKl2r7v2XEgAKpSnFOubWdbeGcW5PEr1oQYafverhHsPAZT1uf2d
      kABUGKUUq2mbifur+P/qXSJWlsN/+yKR453ofl9Jbt/czyQAFUApheMptrIuIwtJMmNTtF+9
      Sayziba/9TV8sUjF7PE/TgJwgG1v9A5zWxazmxapRIaWW3fomp2j6eWTNFwcxAiWtvbmficB
      2Kce36mqlMLKu2QTGbKpHPmtNFYySy6exgj48NVFCESr0aLVmD6DZDKLk7HIJHNkttI46wnM
      zThN8QQd6TRhv0Hr37lIzclutDJcvFZsJQuAm8+wtBanoakZ5eQJBgOk0xmqqqpK9ZJly1MK
      J+/gpHNY8Qz2RoL0yhb55Q1yawnUehyf66D5TPSAD91nUuUzwFO4uTzZvI1r2aAUmq5jmAY1
      pkGt38QIB/HX1RA8eoRAc4zqFzoxAvvrrqy9VLIA3B69Af4gy3GboErT2VzD/TWX032lCYCX
      t3l8e7/uL/7N4sXgeh52Nk9+M4W1mcLeSGCtbmFtJlGbSdxUFnIWRiiAL1ZNuClG7FQXwbYG
      fLVV6H4fejCA7jfxdNDR8XIWXs7GzebwbBcj4NsOyqOwGKHAcyszWI5KFACF8kcY6O9j9OZ9
      splF3llc5/Nf+NyuWnXSWWb+0w+x46lPecVfbfAaansD8JtoPt9vXrmoaRj+7b2h0kB7FCDl
      eXi2g6Zp6P5f7S01v4lm6Nvtfexnv9asoaP7TJSmYbseTjJLfjNJfnULw8qDroMGZlWQQGMt
      NQ01BE50EmiOEWiIoof8aIaBZui/MciebaObBoa/CmoKGT3xaUoUAA07l8XKpchrPkK1bZxs
      dFhajdPd+uwXWPRggNqvv4hjOZ/4WV7TybsKpcCxbHKWjWPZYDu4eQdNA13TMDQwHs19XU+h
      2Q6eUri2i24amIaG+WgD9ukaONuvpWlguC6e42HlbVxXoeLZT3/3ysPneaAUruPir6mi5lA9
      /lNH8NfX4KutxoyEMKvK6+6pg6hkU6Cjnc1cHr7NC6fO4mXjNDc1MDk9j6KWZ52c6IZO9Nih
      guvsKKXwFLhq+/igaRr6oyDA9txbKVAKrHwev9+HoWsf/vxpbT+poNLjFvKWRSB4sJYQHyRS
      GKtM293vhbE+7nFZFF+Ry6IUtTBWPB7HsqyidOxpXNfFsizsHX7Td7mVMCxlu7r+mz8jPKvH
      xXH1ItfpfFwPttjt7nYcyu4IYNt20fci5diu4zglqQ1aqiPA4yrZplncWfdux6HsLoSV6vSm
      tFvadkvV9m7bLLsAFHsPUq7tlmJaBcWf+jymaVpJ+rzbNuUKiaho+/YIYKU3GLl6l64LZwmm
      Vrk+dp/qxk7aIzZj9+fJ5T0+c+EUI9dHqGrs5Gz/UQpZ2uLZKW5evU3d0V5agg5Xrt5CjzTT
      31HF1VsPsDJZBj/7ImPXbuCvquHs0HnChUzh3Ry3b91BizbR11bD+5ev4vijDJ3u5dbwMCnX
      5NyFc0yOXGHTCvLSK+cJFHL09mymJu4Rd0OcPtbGjatXSbo+Tp8ZYGb0GutZj5Nnh5gfe4+t
      nMaJc5+juaaAs07KY356goW44typHu6OXGMlaXN8YJD1qTFWUg4nTp8lPT/G5FKak2fP0xwt
      7LrF6sNJphaSnDl/ivk715ldSdF9/Azu+gNmlhP0vXCCybujOLqfMxdeJhoooFHH4tboDVa3
      LF44c5atyVGW0nDu/BAPxy+zlDYYujDEw/EPWIxrvPjyi1T7nn50ML73ve99r6B3VWSu62Lb
      NqHQpw+qrpv4HRu3JkJyfoZY10nU2hTRnjP0dbWSs1ycxBbdg0PYm/OEok34zQK2KE0naPiw
      NA8tvoRT30ss/RCvvZ9TRzvJZLK0RQyyoWZOv9BD0G8Udt1C0wiHa0intoi4W6z4D9PpS7Lq
      OOSdKrqjHiuOht/fSF+TzcNMlPrqQvY/GuFIjOTmCrGAx7wV4lhTiKX4BqmsnxcORYh7IaxM
      isGzQ0TD/oLnxYFwhExig1hNmJnVNAO9nUzfv0NGizLQ08z08jzZTIjzA+1MLaVoqS/skrMv
      EMZOxYk0NjI1OcOpU/1M379L1tY4deok3sJNcpEOzvSfpCpQ4PiiUVPfTEO1QWJjmaS/lYH2
      CEsb86S9FgYPB5mOJ7CtKGePBpjcDNJUQLL27RRIN334H31RcvuRXjbn7rK4Fsf1YGNhktq2
      blx0QqaBYRioAr/bStNNAo+WRtS2H0PfmGR2aRXHheTKFKHGLsxwFHdzjvff+yUbqU9edf70
      hg0CjxaZ+VuOUWc9ZHJuEds1cbPrzK6lMXDwm378wQBOvsDTv5pOILC9RzdrW2kNZLk3OUsu
      Bz6V5sH8GqahU2V6XLv8DhOLyQLb1QgEAmiAHozQ1RDm9sQkGao50mByZ2KSTDaLYQYw/T7U
      Dm6U8QcC20djDfq6DnHnzgSJrKL3cCN37tzDwsTIbnDlvUssbOYLa1TXSSw/ZDVn0t1aixkI
      4vOZuLaFGQgSCJjYtoXpC+5ofPdtADIbC1y5eZMbV66ynkiTzeYwoq3EAnkernu01wdpb6ri
      7V+8xcKGTTBQ2IchN7PO5eFhbl69yko8RTKVJR9uoS3sMLuUobOlhryVxco5eGoHZxnySYav
      XGZ0ZIT5tQ3iiSw5s5r2GoNkJodlpdGNCA+nrnFpeJbWlgIXBTo5Rq5dZmxsjAcPl0nE02Qd
      6GiOkUxlyOdzZK0kyaSD43qF1+f0XO6NDnNrbIzxB3MkE0kyqSQdXV0kEkky2TwdHX2ozDS/
      uHSd6trCFxzN3LvJyNgYN8cnSSYTpJNbtHf3kEomyCQ3SQZayWSc7aUoBfbXy2xw+cYYKw9n
      mM8GyEzf4J3rd6htOkpm/jpvDj+gtaGd5MoIb/zyHi0tkYLa3bfXAZTn4rjbe/XH3ylmGCa6
      tr2EQdd1UArHcdAMA6PAsxePv7Dvo+3qhoGhaXiPlhNvr+Fx4NF3mBX0K1Ie9qN2dcPY3mPq
      Boau4bkOHhqmYeB5LkppmGaBZy8evUcF6LqBUi6wveTZcx08D0zTwHNdPLX9uKDQKoXjOigF
      mq6jKYXHo7Ycd/uxYYJycVxVeLuA62yvr0LTMTSF+6iPynM/fOy6Dgp9u92ChmF7HGB7fDWl
      cBWYhoHyHFy1vYZLee6Hjwvp774NgBDPw76dAgnxPEgAREWTAIiKJgEQFU0CIErGWp/gr969
      TXblHpduzux1dz7Vvl0KIcqfv66bxP0/4ScL1Vx49VuMX/kFk6kwg+1h3h95wGe++GXS81Os
      5GxeGhos6E68YpMAiJLRNJOXznXxl6Madeohf/Kj96itcshaX8HenOQHb8YIz17l5e/+4z2r
      4iEBECUVjtZzqMnF56+hqbGGjmNHmVna4HBjIwlPIxJro7Uh8sz3ie+WXAgTJeW5Do4HPtPA
      ymWwbI+A38RxPEy/H015+B+tSdoLcgQQJaUbJv5Hqz6CoSqC+6wSjJwFEhXt/wOsKvLdRjlz
      5wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      hAA+wW81/j90+6YmAZOwZwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      xzBd/F6XStc451Ct1ggnfLSaNVqmjVeWwdKpNMwnfwAgiAz0tYn4X3rl9x5zZZ5EiDz37BlM
      V6RZySF3Zm81wnPTCrLqYWsr1S2dGDyOL9pEVVW2nB3FhiDz3JlT2IhUi9ldpqknxtlTnltk
      nD59Bt10kO0K/o7xS/Tw3OlpEGRSZqhbNhqLoRd1xk9Mki/vhEKRNXqjfrRgnGN7llaaP4zf
      26RnYAytXOi2L5GII3gDTE4Edh2UZB+9Ue3JXwI9xf3CZWZmhlxmm/W1NRo7/BvsBldn5kmn
      UiytbXRLlzMbLK0nSaVSbKR26CmuzczMDNnMNqtra+gdJ3+rxpVrC6RTKZbXN7syFm7Mks1m
      SW2skq/tRBF3LWZmrrO9nWY9uavQSG6mGRiIsbG6SjLTpl/QqlCxfbTK2yzuqVulkEGLxMls
      bbKW3BlwrkO23GirQVdXqLV2NoWtElU39PDVoJ3kZ4+ON//oUKlUCIVCBxc8oujUv9lsomka
      ZksHSe1qgjrnG40GPl+bQ+PaJi0bvKqy73ynbEtvIimerrrydjJaepucJzoGDVvqJv2+XVnb
      aGIKHgSzTtOWiAR9gEuj0UTTvGSyefp6e7p1a5ouHsmhWG2RiIX3lNUoFfL4w7GdjXD7/EMf
      AE/xFEcZT5dAT/GFxtMB8BRfaDwdAE/xhcb/BwvFABqrRWSRAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Economic Trends Over Time: GDP vs. GNI' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Exports vs. Imports Over Time' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Global Trade Balance Visualization' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Population vs. Per Capita GNI' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sectoral Contributions to GDP Over Selected Years' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='119'>
      iVBORw0KGgoAAAANSUhEUgAAAHcAAADACAYAAAA+9vxHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAIe0lEQVR4nO3df0zU9x3H8ZcrVTjtDQwtP7RWOwt1dkzjAhuZzUDBH3PWH1n9weJwbq1L
      rP2x2HbSrbMGzahC05gsaTWliY60na2jaZmeXDNN0CMa5bQi1iFaB0Iv/PjqHXIe+e4PKVzZ
      AVY+n++db1+P//hy4XPhme997/P9OcI0TRMk0nfC/QZIH8YVjHEFY1zBGFcwxhWMcQW7q+P6
      fL5wvwWt7uq40jGuYIwrGOMKxriCMa5gjCsY4wrGuIIxrmCMKxjjCsa4gjGuYIwrGOMKxriC
      Ma5gjCsY4wrGuIIxrmCMKxjjCsa4gjGuYIwrGOMKxriCMa5gjCsY4wrGuIIxrmCMKxjjCsa4
      gjGuYIwrGOMKxriCMa5gjCsY4wrGuIIxrmCMKxjjCsa4gjGuYIwrGOMKxriCMa5gjCsY4wrG
      uIIxrmCMKxjjCsa4gjGuYIwrGOMKxriCMa5gjCsY4wrGuIIxrmCMKxjjCsa4gjGuYIwrGOMK
      xriCMa5gjCsY4wrGuIIxrmCMKxjjCsa4gjGuYIwrGOMKxriCMa5gjCsY4wrGuIIxrmCMK1iU
      +j8ZgK/pLKoOOOC67OtdahufgZzcTDyaZNMxKIUwwjRNU82fCqD1xF68UbQDjit2TJmRifT0
      DEweC6D1PFzV1ag6XgsjMQfrXnwOS6ePDXtkn88Hm80W5nehkalEh+kqXm7mLN9ilp9qNrsG
      fF2X2Xyq3NyyPMdcXuwyO9QMftu8Xm+Y34FeitbcGvzzvRjMW5aCkbf0ej/OvVeBzmVP4IfD
      H/y2SV9zFX4s33mkx1W72Qs0wfl6Ad444gFgw/isp/CnZ7KRFO6N611K4VQogOMl+XjV/Qh+
      tX491q9fgqSqAuSXHEdA3SD0LShcp2rgrHgQ68r+iCcTbi6Z/QMTv13hRM2GGZihbiC6RQrX
      XC+uGeOQlBC0KCEJ44xr8KobhL4FxVvDRtQcPAh/78+1aPzGskSkzX4MD6gdlAag8NuyCyUL
      C/HZoK/JQkH588hQM+CwSf+2zKmQ4LgaJil+tJw+hAqHC5d9AGzjkZEzD48/9sAt7uAgVdQe
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
